#!/bin/bash

## aws-keychain    (c) 2014-2015 Paul Annesley    MIT license.
##
## Store multiple AWS IAM access keys in Mac OS X keychain and
## execute commands with AWS credentials in environment.
##
##   aws-keychain add <name> # (interactive prompts follow)
##   aws-keychain add <name> <access_key_id> <secret_access_key> # (beware shell history)
##   aws-keychain ls
##   aws-keychain exec <name> <command ... >
##   aws-keychain rm <name>
#
# Note: `aws-keychain ls` is based on an unauthoritative list on disk, as the
# `security` CLI to keychain cannot enumerate credentials.

set -euo pipefail

: ${AWS_CREDENTIALS_LIST="$HOME/.aws/aws-keychain.list"}
: ${AWS_KEYCHAIN_FILE="$HOME/Library/Keychains/aws-keychain.keychain"}

main() {
  case "${1:-}" in
    add) aws_keychain_add "$@" ;;
    exec) aws_keychain_exec "$@" ;;
    ls) aws_keychain_ls "$@" ;;
    migrate) aws_keychain_migrate "$@" ;;
    rm) aws_keychain_rm "$@" ;;
    *) aws_keychain_usage ;;
  esac
}

aws_keychain_add() {
  [ $# -lt 2 ] && aws_keychain_usage "aws-keychain add"
  local name="$2"
  local id="${3:-}"
  local secret="${4:-}"
  [ -e "$AWS_KEYCHAIN_FILE" ] || security create-keychain -P "$AWS_KEYCHAIN_FILE"
  [ -n "$id" ] ||  read -e -p "Access Key ID: " id
  [ -n "$secret" ] ||  read -e -s -p "Secret Access Key (hidden): " secret
  security add-generic-password \
    -a "$name" \
    -c "awsv" \
    -D "access key" \
    -G "$id" \
    -j "aws-keychain IAM access key" \
    -s "Amazon AWS" \
    -w "$secret" \
    -U \
    -T "" \
    "$AWS_KEYCHAIN_FILE"
  mkdir -p "$(dirname "$AWS_CREDENTIALS_LIST")"
  echo "$name" >> $AWS_CREDENTIALS_LIST
}

aws_keychain_exec() {
  [ $# -gt 2 ] || aws_keychain_usage "aws-keychain exec"
  local name="$2"
  shift 2
  local raw="$(aws_keychain_raw "$name")"
  local id="$(aws_keychain_extract_generic_attribute "$raw")"
  local secret="$(aws_keychain_extract_password "$raw")"
  if [ -z "$id" -o -z "$secret" ]; then
    echo >&2 "No credentials for '$name':"
    echo >&2 "$raw"
    echo >&2 "You may need to 'aws-keychain migrate'"
    exit 1
  fi
  AWS_ACCESS_KEY_ID="$id" AWS_SECRET_ACCESS_KEY="$secret" "$@"
}

aws_keychain_raw() {
  local name="$1"
  security find-generic-password \
    -a "$name" \
    -c "awsv" \
    -D "access key" \
    -s "Amazon AWS" \
    -g \
    "$AWS_KEYCHAIN_FILE" 2>&1
}

aws_keychain_extract_generic_attribute() {
  local raw="$1"
  echo "$raw" | awk 'BEGIN { FS="=" } /^ *"gena"/ { gsub(/^"|"$/, "", $2); print $2 }'
}

aws_keychain_extract_password() {
  local raw="$1"
  echo "$raw" | awk '/^password:/ { gsub(/^"|"$/, "", $2); print $2 }'
}

aws_keychain_ls() {
  [ $# -eq 1 ] || aws_keychain_usage "aws-keychain ls"
  cat $AWS_CREDENTIALS_LIST | sort | uniq
}

aws_keychain_migrate() {
  local src=${AWS_KEYCHAIN_FILE_SRC:-"$HOME/Library/Keychains/login.keychain"}
  local dst="$AWS_KEYCHAIN_FILE"
  local tmp_list="$AWS_CREDENTIALS_LIST-migrate"
  cp -- "$AWS_CREDENTIALS_LIST" "$tmp_list"
  for name in $(aws_keychain_ls ls); do
    if [ "$src" = "$dst" ]; then echo >&2 "Cannot migrate from $src to $dst"; exit 1; fi
    echo "Migrating $name from '$src' to '$dst'"
    AWS_KEYCHAIN_FILE="$src" aws-keychain exec $name \
      bash -c "AWS_KEYCHAIN_FILE="$dst" $0 add \"$name\" \"\$AWS_ACCESS_KEY_ID\" \"\$AWS_SECRET_ACCESS_KEY\""
    AWS_KEYCHAIN_FILE="$src" AWS_CREDENTIALS_LIST="$tmp_list" $0 rm $name
  done
  rm -- "$tmp_list"
}

aws_keychain_rm() {
  [ $# -eq 2 ] || aws_keychain_usage "aws-keychain rm"
  local name="$2"
  security delete-generic-password \
    -a "$name" \
    -c "awsv" \
    -D "access key" \
    -s "Amazon AWS" \
    "$AWS_KEYCHAIN_FILE" >/dev/null
  local tmp="${AWS_CREDENTIALS_LIST}.tmp"
  grep -vw "$name" $AWS_CREDENTIALS_LIST > $tmp
  mv $tmp $AWS_CREDENTIALS_LIST
}

aws_keychain_usage() {
  echo
  grep "^##.*${1:-}" "${BASH_SOURCE[0]}" | cut -c 4-
  echo
  exit 1
}

main "$@"
